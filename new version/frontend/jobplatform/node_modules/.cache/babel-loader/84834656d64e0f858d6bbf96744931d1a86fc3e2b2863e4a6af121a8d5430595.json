{"ast":null,"code":"import { ref, reactive, computed, watch, onMounted } from 'vue';\nimport { api } from '@/axios.js';\nimport BasePagination from \"@/components/common/BasePagination.vue\";\nimport SearchComponent from '@/components/fo/enterprise/SearchComponent.vue';\nexport default {\n  __name: 'JobPostingListView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const state = reactive({\n      items: [],\n      currentPage: 1,\n      itemsPerPage: 12\n    });\n    const sortOption = ref('regstrStrtDtm');\n\n    // 초기 데이터 로드\n    const fetchItems = async () => {\n      try {\n        const response = await api.$get('/board/list/jobPosting', {\n          params: {\n            sortBy: sortOption.value\n          }\n        });\n        state.items = response;\n      } catch (error) {\n        console.error('Error fetching items:', error);\n      }\n    };\n\n    // 컴포넌트가 마운트된 후 데이터 로드\n    onMounted(() => {\n      fetchItems();\n    });\n    const fetchSortedItems = () => {\n      state.currentPage = 1; // 페이지를 첫 페이지로 초기화\n      fetchItems();\n    };\n\n    // 페이지네이션 계산\n    const paginatedItems = computed(() => {\n      const startIndex = (state.currentPage - 1) * state.itemsPerPage;\n      const endIndex = startIndex + state.itemsPerPage;\n      return filteredItems.value.slice(startIndex, endIndex);\n    });\n\n    // 전체 페이지 수 계산\n    const totalPages = computed(() => Math.ceil(filteredItems.value.length / state.itemsPerPage));\n\n    // 선택된 옵션들\n    const selectedLocations = ref([]);\n    const selectedCareers = ref([]);\n    const selectedEducations = ref([]);\n    const selectedJobTypes = ref([]);\n\n    // 드롭다운 메뉴 표시 상태\n    const showDropdown = reactive({\n      region: false,\n      career: false,\n      education: false,\n      jobType: false\n    });\n\n    // 필터된 아이템들 계산\n    const filteredItems = computed(() => {\n      if (!state.items) return [];\n      return state.items.filter(item => {\n        let isValid = true;\n        if (selectedLocations.value.length > 0 && !selectedLocations.value.includes(item.workArea)) {\n          isValid = false;\n        }\n        if (selectedCareers.value.length > 0 && !selectedCareers.value.includes(item.cr)) {\n          isValid = false;\n        }\n        if (selectedEducations.value.length > 0 && !selectedEducations.value.includes(item.edctn)) {\n          isValid = false;\n        }\n        if (selectedJobTypes.value.length > 0 && !selectedJobTypes.value.includes(item.jobName)) {\n          isValid = false;\n        }\n        return isValid;\n      });\n    });\n\n    // 페이지 변경 함수\n    function goToPage(page) {\n      if (page >= 1 && page <= totalPages.value) {\n        state.currentPage = page;\n      }\n    }\n\n    // Watchers\n    watch(selectedLocations, () => {\n      state.currentPage = 1;\n    });\n    watch(selectedCareers, () => {\n      state.currentPage = 1;\n    });\n    watch(selectedEducations, () => {\n      state.currentPage = 1;\n    });\n    watch(selectedJobTypes, () => {\n      state.currentPage = 1;\n    });\n    watch(sortOption, fetchSortedItems);\n\n    // 검색 결과 처리 함수\n    const handleSearchResult = searchResults => {\n      state.items = searchResults;\n      state.currentPage = 1;\n    };\n\n    // 드롭다운 토글 함수\n    function toggleDropdown(type) {\n      for (const key in showDropdown) {\n        if (key === type) {\n          showDropdown[key] = !showDropdown[key];\n        } else {\n          showDropdown[key] = false;\n        }\n      }\n    }\n    const __returned__ = {\n      state,\n      sortOption,\n      fetchItems,\n      fetchSortedItems,\n      paginatedItems,\n      totalPages,\n      selectedLocations,\n      selectedCareers,\n      selectedEducations,\n      selectedJobTypes,\n      showDropdown,\n      filteredItems,\n      goToPage,\n      handleSearchResult,\n      toggleDropdown,\n      ref,\n      reactive,\n      computed,\n      watch,\n      onMounted,\n      get api() {\n        return api;\n      },\n      BasePagination,\n      SearchComponent\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","watch","onMounted","api","BasePagination","SearchComponent","state","items","currentPage","itemsPerPage","sortOption","fetchItems","response","$get","params","sortBy","value","error","console","fetchSortedItems","paginatedItems","startIndex","endIndex","filteredItems","slice","totalPages","Math","ceil","length","selectedLocations","selectedCareers","selectedEducations","selectedJobTypes","showDropdown","region","career","education","jobType","filter","item","isValid","includes","workArea","cr","edctn","jobName","goToPage","page","handleSearchResult","searchResults","toggleDropdown","type","key"],"sources":["C:/Users/est/Desktop/p2/frontend/jobplatform/src/views/fo/enterprise/JobPostingListView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <section class=\"page-header page-header-modern bg-color-grey page-header-md\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 align-self-center p-static order-2 text-center\">\r\n              <h1 class=\"text-dark font-weight-bold text-8\">일반게시판</h1>\r\n              <span class=\"sub-title text-dark\">자유로운 글 작성!</span>\r\n            </div>\r\n            <div class=\"col-md-12 align-self-center order-1\">\r\n              <ul class=\"breadcrumb d-block text-center\">\r\n                <li><a href=\"/\">Home</a></li>\r\n                <li class=\"active\">일반게시판</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <section class=\"card card-admin\">\r\n        <div class=\"container py-4\">\r\n          <div class=\"d-flex justify-content-end\">\r\n            <router-link to=\"/board/jobPostingInsert\" class=\"btn btn-primary\">등록</router-link>\r\n          </div>\r\n  \r\n          <!-- 검색 옵션 UI -->\r\n  \r\n  \r\n          <!-- 게시글 목록 -->\r\n          <div class=\"list-container\">\r\n            <div class=\"list-header\">\r\n              <div class=\"search-options\">\r\n                <div class=\"dropdown-wrapper\">\r\n                  <button @click=\"toggleDropdown('region')\">지역</button>\r\n                  <div v-if=\"showDropdown.region\" class=\"dropdown\">\r\n                    <label><input type=\"checkbox\" v-model=\"selectedLocations\" value=\"서울전체\"> 서울전체</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedLocations\" value=\"서울시 용산구\"> 서울시 용산구</label>\r\n                    <!-- 필요한 만큼 추가 -->\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"dropdown-wrapper\">\r\n                  <button @click=\"toggleDropdown('career')\">경력</button>\r\n                  <div v-if=\"showDropdown.career\" class=\"dropdown\">\r\n                    <label><input type=\"checkbox\" v-model=\"selectedCareers\" value=\"경력무관\"> 경력무관</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedCareers\" value=\"신입\"> 신입</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedCareers\" value=\"경력\"> 경력</label>\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"dropdown-wrapper\">\r\n                  <button @click=\"toggleDropdown('education')\">학력</button>\r\n                  <div v-if=\"showDropdown.education\" class=\"dropdown\">\r\n                    <label><input type=\"checkbox\" v-model=\"selectedEducations\" value=\"학력무관\"> 학력무관</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedEducations\" value=\"고등학교 이상\"> 고등학교 이상</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedEducations\" value=\"대학교(2,3년제) 이상\"> 대학교(2,3년제) 이상</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedEducations\" value=\"대학교(4년제) 이상\"> 대학교(4년제) 이상</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedEducations\" value=\"석사\"> 석사</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedEducations\" value=\"박사\"> 박사</label>\r\n                    <!-- 필요한 만큼 추가 -->\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"dropdown-wrapper\">\r\n                  <button @click=\"toggleDropdown('jobType')\">직종</button>\r\n                  <div v-if=\"showDropdown.jobType\" class=\"dropdown\">\r\n                    <label><input type=\"checkbox\" v-model=\"selectedJobTypes\" value=\"개발\"> 개발</label>\r\n                    <label><input type=\"checkbox\" v-model=\"selectedJobTypes\" value=\"마케팅\"> 마케팅</label>\r\n                    <!-- 필요한 만큼 추가 -->\r\n                  </div>\r\n                </div>\r\n  \r\n                <!-- <button @click=\"performSearchBySelectedOptions\">검색</button> -->\r\n              </div>\r\n              <SearchComponent @searchResult=\"handleSearchResult\" />\r\n              <div>\r\n                <select v-model=\"sortOption\" @change=\"fetchSortedItems\">\r\n                  <option value=\"regstrStrtDtm\">최신순</option>\r\n                  <option value=\"apply\">지원자순</option>\r\n                  <option value=\"hits\">조회수순</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"list-body\">\r\n              <div v-if=\"paginatedItems.length > 0\">\r\n                <div v-for=\"(item, idx) in paginatedItems\" :key=\"idx\" class=\"custom\">\r\n                  <div><router-link :to=\"`/board/detail/jobPosting/${item.jbpSq}`\">{{ item.jbpTl }}</router-link></div>\r\n                  <div>{{ item.edctn }}</div>\r\n                  <div>{{ item.cr }}</div>\r\n                  <div>{{ item.jobName }}</div>\r\n                </div>\r\n              </div>\r\n              <!-- 검색 결과가 없을 때 표시될 메시지 -->\r\n              <div v-else class=\"text-center py-5\">\r\n                <p class=\"text-muted\">결과가 없습니다.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"pagenation-wrapper\">\r\n            <BasePagination :currentPage=\"state.currentPage\" :totalPages=\"totalPages\" @goToPage=\"goToPage\" />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive, computed, watch, onMounted } from 'vue';\r\n  import { api } from '@/axios.js';\r\n  import BasePagination from \"@/components/common/BasePagination.vue\";\r\n  import SearchComponent from '@/components/fo/enterprise/SearchComponent.vue';\r\n  \r\n  const state = reactive({\r\n    items: [],\r\n    currentPage: 1,\r\n    itemsPerPage: 12\r\n  });\r\n  \r\n  const sortOption = ref('regstrStrtDtm');\r\n  \r\n  // 초기 데이터 로드\r\n  const fetchItems = async () => {\r\n    try {\r\n      const response = await api.$get('/board/list/jobPosting', {\r\n        params: { sortBy: sortOption.value }\r\n      });\r\n      state.items = response; \r\n    } catch (error) {\r\n      console.error('Error fetching items:', error);\r\n    }\r\n  };\r\n  \r\n  // 컴포넌트가 마운트된 후 데이터 로드\r\n  onMounted(() => {\r\n    fetchItems();\r\n  });\r\n  \r\n  const fetchSortedItems = () => {\r\n    state.currentPage = 1; // 페이지를 첫 페이지로 초기화\r\n    fetchItems();\r\n  };\r\n  \r\n  // 페이지네이션 계산\r\n  const paginatedItems = computed(() => {\r\n    const startIndex = (state.currentPage - 1) * state.itemsPerPage;\r\n    const endIndex = startIndex + state.itemsPerPage;\r\n    return filteredItems.value.slice(startIndex, endIndex);\r\n  });\r\n  \r\n  // 전체 페이지 수 계산\r\n  const totalPages = computed(() => Math.ceil(filteredItems.value.length / state.itemsPerPage));\r\n  \r\n  // 선택된 옵션들\r\n  const selectedLocations = ref([]);\r\n  const selectedCareers = ref([]);\r\n  const selectedEducations = ref([]);\r\n  const selectedJobTypes = ref([]);\r\n  \r\n  // 드롭다운 메뉴 표시 상태\r\n  const showDropdown = reactive({\r\n    region: false,\r\n    career: false,\r\n    education: false,\r\n    jobType: false\r\n  });\r\n  \r\n  // 필터된 아이템들 계산\r\n  const filteredItems = computed(() => {\r\n    if (!state.items) return [];\r\n    return state.items.filter(item => {\r\n      let isValid = true;\r\n  \r\n      if (selectedLocations.value.length > 0 && !selectedLocations.value.includes(item.workArea)) {\r\n        isValid = false;\r\n      }\r\n      if (selectedCareers.value.length > 0 && !selectedCareers.value.includes(item.cr)) {\r\n        isValid = false;\r\n      }\r\n      if (selectedEducations.value.length > 0 && !selectedEducations.value.includes(item.edctn)) {\r\n        isValid = false;\r\n      }\r\n      if (selectedJobTypes.value.length > 0 && !selectedJobTypes.value.includes(item.jobName)) {\r\n        isValid = false;\r\n      }\r\n  \r\n      return isValid;\r\n    });\r\n  });\r\n  \r\n  // 페이지 변경 함수\r\n  function goToPage(page) {\r\n    if (page >= 1 && page <= totalPages.value) {\r\n      state.currentPage = page;\r\n    }\r\n  }\r\n  \r\n  // Watchers\r\n  watch(selectedLocations, () => {\r\n    state.currentPage = 1;\r\n  });\r\n  watch(selectedCareers, () => {\r\n    state.currentPage = 1;\r\n  });\r\n  watch(selectedEducations, () => {\r\n    state.currentPage = 1;\r\n  });\r\n  watch(selectedJobTypes, () => {\r\n    state.currentPage = 1;\r\n  });\r\n  \r\n  watch(sortOption, fetchSortedItems);\r\n  \r\n  // 검색 결과 처리 함수\r\n  const handleSearchResult = (searchResults) => {\r\n    state.items = searchResults;\r\n    state.currentPage = 1;\r\n  }\r\n  \r\n  // 드롭다운 토글 함수\r\n  function toggleDropdown(type) {\r\n    for (const key in showDropdown) {\r\n      if (key === type) {\r\n        showDropdown[key] = !showDropdown[key];\r\n      } else {\r\n        showDropdown[key] = false;\r\n      }\r\n    }\r\n  }\r\n  \r\n  \r\n  </script>\r\n  \r\n  <style scoped>\r\n  .list-header {\r\n    display: flex;\r\n  }\r\n  .list-header > div {\r\n    margin-left: 50px;\r\n  }\r\n  .list-body {\r\n    margin-top: 50px;\r\n  }\r\n  .custom {\r\n    background-color: #ffffff;\r\n    border-radius: 0.5rem;\r\n    padding: 1rem;\r\n    margin: 15px;\r\n    width: calc(25% - 30px); /* 4개의 아이템이 한 줄에 나타나도록 설정 */\r\n    border: 1px solid #002C7B;\r\n    text-align: center;\r\n    float: left;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .search-options {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .dropdown-wrapper {\r\n    position: relative; /* 부모 요소에 대해 위치를 상대적으로 설정 */\r\n  }\r\n  \r\n  .search-options button {\r\n    padding: 8px 16px;\r\n    font-size: 16px;\r\n    background-color: #3498db;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  .search-options button:hover {\r\n    background-color: #2980b9;\r\n  }\r\n  \r\n  .dropdown {\r\n    position: absolute;\r\n    top: 100%; /* 버튼 바로 아래에 위치하도록 설정 */\r\n    left: 0;\r\n    background-color: #f9f9f9;\r\n    min-width: 160px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n    z-index: 1;\r\n    margin-top: 5px;\r\n  }\r\n  \r\n  .dropdown label {\r\n    display: block;\r\n    padding: 10px;\r\n  }\r\n  \r\n  .dropdown label:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n  \r\n  \r\n  \r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}