{"ast":null,"code":"import JoinCompanyCondition from '@/components/user/mypage/JoinCompanyCondition.vue';\nimport ViewPaginate from '@/components/user/common/ViewPaginate.vue';\nimport axios from \"axios\";\nimport { reactive, ref, computed } from \"vue\";\nconst itemsPerPage = 5; // 한 페이지에 보여줄 지원정보 5개\n\nexport default {\n  __name: 'ApplyCompanyList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const state = reactive({\n      form: {\n        id: \"\"\n      }\n    });\n    const applyInfo = ref([]); // 사용자 지원정보\n    const pageCount = ref(); // 보여줄 총 페이지 수\n    const currentPage = ref(1); // 현재 페이지\n\n    const select = ref('전체'); // 셀렉트박스 (전체, 진행중, 마감)\n    const totalApplyCount = ref(''); // 지원완료\n    // const applyCancel =ref(''); //지원 취소\n\n    const submit = () => {\n      // 사용자 id 검색으로 정보가져오기\n      axios.post(\"http://localhost:80/mypage/test\", state.form).then(async res => {\n        console.log(res.data);\n        currentPage.value = 1;\n        if (res.data === null || res.data.length === 0) {\n          alert(\"사용자 없음\");\n          applyInfo.value = [];\n          totalApplyCount.value = '';\n        } else {\n          applyInfo.value = res.data.applyInfo;\n          totalApplyCount.value = res.data.totalApplyCount;\n          pageCount.value = Math.ceil(res.data.applyInfo.length / itemsPerPage);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    const filteredApplyInfo = computed(() => {\n      // 공고상태 선택\n      if (select.value === '진행중') {\n        return applyInfo.value.filter(item => item.jbpCndtn === '진행중'); // item의 항목중 jbpCndtn이 '진행중'인것만 반환\n      } else if (select.value === '마감') {\n        return applyInfo.value.filter(item => item.jbpCndtn === '마감'); // item의 항목중 jbpCndtn이 '마감'인것만 반환\n      } else {\n        return applyInfo.value;\n      }\n    });\n    const handlePageChange = pageNum => {\n      // 클릭한 현재 페이지\n      currentPage.value = pageNum;\n    };\n\n    // 페이징된 지원 정보 계산\n    const paginatedApplyInfo = computed(() => {\n      const startIndex = (currentPage.value - 1) * itemsPerPage;\n      const endIndex = startIndex + itemsPerPage;\n      return filteredApplyInfo.value.slice(startIndex, endIndex);\n    });\n    const __returned__ = {\n      state,\n      applyInfo,\n      pageCount,\n      currentPage,\n      select,\n      itemsPerPage,\n      totalApplyCount,\n      submit,\n      filteredApplyInfo,\n      handlePageChange,\n      paginatedApplyInfo,\n      JoinCompanyCondition,\n      ViewPaginate,\n      get axios() {\n        return axios;\n      },\n      reactive,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["JoinCompanyCondition","ViewPaginate","axios","reactive","ref","computed","itemsPerPage","state","form","id","applyInfo","pageCount","currentPage","select","totalApplyCount","submit","post","then","res","console","log","data","value","length","alert","Math","ceil","catch","error","filteredApplyInfo","filter","item","jbpCndtn","handlePageChange","pageNum","paginatedApplyInfo","startIndex","endIndex","slice"],"sources":["C:/Users/est/Desktop/p2/frontend/jobplatform/src/components/fo/user/mypage/ApplyCompanyList.vue"],"sourcesContent":["<template>\r\n    <div role=\"main\" class=\"main container py-2\">\r\n        <section class=\"page-header page-header-modern bg-color-grey page-header-lg\">\r\n            <!-- 페이지 헤더 -->\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 align-self-center p-static order-2 text-center\">\r\n                        <h1 class=\"font-weight-bold text-dark\">입사지원 현황</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        \r\n        <!-- 검색창 -->\r\n        \r\n        <div\r\n      class=\"header-nav-features header-nav-features-no-border col-lg-5 col-xl-6 px-0 ms-0 mb-4\" style=\"display: flex;\">\r\n      <div class=\"header-nav-feature  pe-lg-4\" >\r\n        <div class=\"search-with-select\">\r\n          <div class=\"search-form-wrapper input-group\">\r\n            <input\r\n              class=\"form-control text-1\"\r\n              type=\"search\"\r\n              v-model=\"search\"\r\n              placeholder=\"검색할 내용을 입력하세요\"\r\n            />\r\n            <div class=\"search-form-select-wrapper\">\r\n              <div class=\"custom-select-1\">\r\n                <select v-model=\"searchType\" class=\"form-control form-select\">\r\n                  <option value=\"brdTl\">공고 제목</option>\r\n                  <option value=\"brdCntnt\">이력서 제목</option>\r\n                </select>\r\n              </div>\r\n              <button\r\n                class=\"btn\"\r\n                type=\"button\"\r\n                aria-label=\"Search\"\r\n                @click=\"boardSearch\"\r\n              >\r\n                <i\r\n                  class=\"icons icon-magnifier header-nav-top-icon text-color-dark\"\r\n                ></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n            <div class=\"custom-select-1 ml-10\">\r\n                <select class=\"form-control form-select\" v-model=\"select\">\r\n                  <option value=\"전체\" selected >전체 공고</option>\r\n                  <option value=\"진행중\">진행중인 공고</option>\r\n                  <option value=\"마감\">마감된 공고</option>\r\n                </select>\r\n              </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <span class=\"bg-white p-2 border\" >지원완료 : {{  totalApplyCount }}</span>\r\n        <span class=\"bg-white p-2 border\">열 람 : 0</span>\r\n        <span class=\"bg-white p-2 border\">미열람 : 0</span>\r\n        <span class=\"bg-white p-2 border\">지원 취소 : 0</span>\r\n    </div>\r\n    \r\n        <form @submit.prevent=\"submit\">\r\n            <input type=\"text\" value=\"\" id=\"userId\" v-model=\"state.form.id\" >\r\n            <input type=\"submit\" value=\"전송\">\r\n        </form>\r\n\r\n        <div v-if=\"filteredApplyInfo.length > 0\">\r\n            <JoinCompanyCondition \r\n            v-for=\"item in paginatedApplyInfo\"\r\n            :key=\"item.apy_sq\"\r\n            :data=\"item\" \r\n            />\r\n        </div>\r\n        <div v-else-if=\"filteredApplyInfo.length == 0\">\r\n          <h4>조회된 내용이 없습니다</h4>\r\n        </div>\r\n        <div v-if=\"filteredApplyInfo.length != 0\">\r\n          <ViewPaginate\r\n          :pageCount=\"pageCount\" \r\n          :currentPage=\"currentPage\"\r\n          @pageNum=\"handlePageChange\"\r\n          />\r\n        </div>\r\n\r\n\r\n    </div>\r\n    <!-- 입사지원 현황 -->\r\n</template>\r\n\r\n<script setup>\r\nimport JoinCompanyCondition from '@/components/user/mypage/JoinCompanyCondition.vue';\r\nimport ViewPaginate from '@/components/user/common/ViewPaginate.vue';\r\nimport axios from \"axios\";\r\nimport { reactive, ref, computed } from \"vue\";\r\n\r\nconst state = reactive({\r\n    form : {\r\n        id:\"\",\r\n    }\r\n})\r\n\r\nconst applyInfo = ref([]); // 사용자 지원정보\r\nconst pageCount = ref(); // 보여줄 총 페이지 수\r\nconst currentPage = ref(1); // 현재 페이지\r\n\r\nconst select = ref('전체'); // 셀렉트박스 (전체, 진행중, 마감)\r\nconst itemsPerPage = 5; // 한 페이지에 보여줄 지원정보 5개\r\n\r\nconst totalApplyCount = ref(''); // 지원완료\r\n// const applyCancel =ref(''); //지원 취소\r\n\r\nconst submit = () => { // 사용자 id 검색으로 정보가져오기\r\n    axios.post(\"http://localhost:80/mypage/test\",state.form).then(async (res) => {\r\n        console.log(res.data);\r\n        currentPage.value = 1;\r\n        if(res.data === null || res.data.length === 0){\r\n          alert(\"사용자 없음\");\r\n          applyInfo.value = [];\r\n          totalApplyCount.value = '';\r\n        }else{\r\n          applyInfo.value = res.data.applyInfo;\r\n          totalApplyCount.value = res.data.totalApplyCount;\r\n          pageCount.value = Math.ceil(res.data.applyInfo.length / itemsPerPage);\r\n        \r\n        }\r\n    }).catch((error) => {\r\n        console.log(error);\r\n       \r\n    });\r\n};\r\n\r\nconst filteredApplyInfo = computed(() =>{  // 공고상태 선택\r\n  if(select.value === '진행중') {\r\n    return applyInfo.value.filter(item => item.jbpCndtn === '진행중'); // item의 항목중 jbpCndtn이 '진행중'인것만 반환\r\n  }else if (select.value === '마감') {\r\n    return applyInfo.value.filter(item => item.jbpCndtn === '마감'); // item의 항목중 jbpCndtn이 '마감'인것만 반환\r\n  }else{\r\n    return applyInfo.value;\r\n  }\r\n});\r\n\r\nconst handlePageChange = (pageNum) => { // 클릭한 현재 페이지\r\n  currentPage.value = pageNum;\r\n}\r\n\r\n// 페이징된 지원 정보 계산\r\nconst paginatedApplyInfo = computed(() => {\r\n  const startIndex = (currentPage.value - 1)*itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  return filteredApplyInfo.value.slice(startIndex, endIndex);\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.main {\r\n    padding: 20px 0;\r\n}\r\n.page-header {\r\n    margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"AA6FA,OAAOA,oBAAoB,MAAM,mDAAmD;AACpF,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AAa7C,MAAMC,YAAY,GAAG,CAAC,CAAC,CAAC;;;;;;;;IAXxB,MAAMC,KAAK,GAAGJ,QAAQ,CAAC;MACnBK,IAAI,EAAG;QACHC,EAAE,EAAC;MACP;IACJ,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,MAAMO,SAAS,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,MAAMQ,WAAW,GAAGR,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE5B,MAAMS,MAAM,GAAGT,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAG1B,MAAMU,eAAe,GAAGV,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC;;IAEA,MAAMW,MAAM,GAAGA,CAAA,KAAM;MAAE;MACnBb,KAAK,CAACc,IAAI,CAAC,iCAAiC,EAACT,KAAK,CAACC,IAAI,CAAC,CAACS,IAAI,CAAC,MAAOC,GAAG,IAAK;QACzEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;QACrBT,WAAW,CAACU,KAAK,GAAG,CAAC;QACrB,IAAGJ,GAAG,CAACG,IAAI,KAAK,IAAI,IAAIH,GAAG,CAACG,IAAI,CAACE,MAAM,KAAK,CAAC,EAAC;UAC5CC,KAAK,CAAC,QAAQ,CAAC;UACfd,SAAS,CAACY,KAAK,GAAG,EAAE;UACpBR,eAAe,CAACQ,KAAK,GAAG,EAAE;QAC5B,CAAC,MAAI;UACHZ,SAAS,CAACY,KAAK,GAAGJ,GAAG,CAACG,IAAI,CAACX,SAAS;UACpCI,eAAe,CAACQ,KAAK,GAAGJ,GAAG,CAACG,IAAI,CAACP,eAAe;UAChDH,SAAS,CAACW,KAAK,GAAGG,IAAI,CAACC,IAAI,CAACR,GAAG,CAACG,IAAI,CAACX,SAAS,CAACa,MAAM,GAAGjB,YAAY,CAAC;QAEvE;MACJ,CAAC,CAAC,CAACqB,KAAK,CAAEC,KAAK,IAAK;QAChBT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MAEtB,CAAC,CAAC;IACN,CAAC;IAED,MAAMC,iBAAiB,GAAGxB,QAAQ,CAAC,MAAK;MAAG;MACzC,IAAGQ,MAAM,CAACS,KAAK,KAAK,KAAK,EAAE;QACzB,OAAOZ,SAAS,CAACY,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC;MAClE,CAAC,MAAK,IAAInB,MAAM,CAACS,KAAK,KAAK,IAAI,EAAE;QAC/B,OAAOZ,SAAS,CAACY,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;MACjE,CAAC,MAAI;QACH,OAAOtB,SAAS,CAACY,KAAK;MACxB;IACF,CAAC,CAAC;IAEF,MAAMW,gBAAgB,GAAIC,OAAO,IAAK;MAAE;MACtCtB,WAAW,CAACU,KAAK,GAAGY,OAAO;IAC7B,CAAC;;IAED;IACA,MAAMC,kBAAkB,GAAG9B,QAAQ,CAAC,MAAM;MACxC,MAAM+B,UAAU,GAAG,CAACxB,WAAW,CAACU,KAAK,GAAG,CAAC,IAAEhB,YAAY;MACvD,MAAM+B,QAAQ,GAAGD,UAAU,GAAG9B,YAAY;MAC1C,OAAOuB,iBAAiB,CAACP,KAAK,CAACgB,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IAC5D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}