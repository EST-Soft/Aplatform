{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'SampleView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const id = ref();\n    const deleteId = ref();\n    const name = ref(\"\");\n    const password = ref(\"\");\n    const responseId = ref(\"\");\n    const responsePassword = ref(\"\");\n\n    // const getTest = axios.get(\"/sample/sample\").then(console.log(\"get\")).catch();\n\n    const postTest = () => {\n      axios.post(\"http://localhost:80/sample/sample\", {\n        name: name.value,\n        password: password.value\n      }).then(response => {\n        alert(response.data.id);\n      }).catch();\n    };\n    const getTest = () => {\n      axios.get(\"http://localhost:80/sample/sample\", {\n        params: {\n          id: id.value\n        }\n      }).then(response => {\n        alert(\"Id : \" + response.data.name + \" password :\" + response.data.password);\n      }).catch();\n    };\n    const deleteTest = () => {\n      axios.delete(\"http://localhost:80/sample/sample\", {\n        params: {\n          id: deleteId.value\n        }\n      }).then(response => {\n        alert(\"Id : \" + response.data.name + \" password :\" + response.data.password + \"삭제됨\");\n      }).catch();\n    };\n    const __returned__ = {\n      id,\n      deleteId,\n      name,\n      password,\n      responseId,\n      responsePassword,\n      postTest,\n      getTest,\n      deleteTest,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","id","deleteId","name","password","responseId","responsePassword","postTest","post","value","then","response","alert","data","catch","getTest","get","params","deleteTest","delete"],"sources":["C:/Users/est/Desktop/p2/frontend/jobplatform/src/views/devSample/SampleView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h4>회원가입</h4>\r\n      <form @submit.prevent=\"postTest\">\r\n        <!-- 데이터 바인딩 -->\r\n        <input type=\"text\" v-model=\"name\" placeholder=\"이름\" />\r\n        <input type=\"text\" v-model=\"password\" placeholder=\"비밀번호\" />\r\n        <button type=\"submit\">회원가입</button>\r\n      </form>\r\n    </div>\r\n\r\n    <h4>조회</h4>\r\n\r\n    <form @submit.prevent=\"getTest\">\r\n      <input type=\"text\" v-model=\"id\" placeholder=\"번호로 조회\" />\r\n      <button type=\"submit\">조회</button>\r\n      <p>{{ responseId }}</p>\r\n      <p>{{ responsePassword }}</p>\r\n    </form>\r\n\r\n    <h4>삭제 테스트</h4>\r\n    <form @submit.prevent=\"deleteTest\">\r\n      <input type=\"text\" v-model=\"deleteId\" placeholder=\"번호로 삭제\" />\r\n      <button type=\"submit\">조회</button>\r\n    </form>\r\n    <h4>번호로 조회 후 수정 확인해보기</h4>\r\n\r\n    <!--\r\n    <form @submit.prevent=\"postTest\">\r\n      \r\n      <input type=\"text\" v-model=\"name\" />\r\n      <input type=\"text\" v-model=\"password\" />\r\n      <button type=\"submit\">회원가입</button>\r\n    </form> -->\r\n  </template>\r\n\r\n  <!-- composition api-->\r\n  <script setup>\r\n  import { ref } from \"vue\";\r\n  import axios from \"axios\";\r\n\r\n  const id = ref();\r\n  const deleteId = ref();\r\n  const name = ref(\"\");\r\n  const password = ref(\"\");\r\n\r\n  const responseId = ref(\"\");\r\n  const responsePassword = ref(\"\");\r\n\r\n  // const getTest = axios.get(\"/sample/sample\").then(console.log(\"get\")).catch();\r\n\r\n  const postTest = () => {\r\n    axios\r\n      .post(\"http://localhost:80/sample/sample\", {\r\n        name: name.value,\r\n        password: password.value,\r\n      })\r\n      .then((response) => {\r\n        alert(response.data.id);\r\n      })\r\n      .catch();\r\n  };\r\n  const getTest = () => {\r\n    axios\r\n      .get(\"http://localhost:80/sample/sample\", {\r\n        params: {\r\n          id: id.value,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\r\n          \"Id : \" + response.data.name + \" password :\" + response.data.password\r\n        );\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const deleteTest = () => {\r\n    axios\r\n      .delete(\"http://localhost:80/sample/sample\", {\r\n        params: {\r\n          id: deleteId.value,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\r\n          \"Id : \" +\r\n            response.data.name +\r\n            \" password :\" +\r\n            response.data.password +\r\n            \"삭제됨\"\r\n        );\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  </script>\r\n  <style>\r\n  </style>"],"mappings":"AAsCE,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,EAAE,GAAGF,GAAG,CAAC,CAAC;IAChB,MAAMG,QAAQ,GAAGH,GAAG,CAAC,CAAC;IACtB,MAAMI,IAAI,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMM,UAAU,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMO,gBAAgB,GAAGP,GAAG,CAAC,EAAE,CAAC;;IAEhC;;IAEA,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;MACrBP,KAAK,CACFQ,IAAI,CAAC,mCAAmC,EAAE;QACzCL,IAAI,EAAEA,IAAI,CAACM,KAAK;QAChBL,QAAQ,EAAEA,QAAQ,CAACK;MACrB,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,KAAK,CAACD,QAAQ,CAACE,IAAI,CAACZ,EAAE,CAAC;MACzB,CAAC,CAAC,CACDa,KAAK,CAAC,CAAC;IACZ,CAAC;IACD,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBf,KAAK,CACFgB,GAAG,CAAC,mCAAmC,EAAE;QACxCC,MAAM,EAAE;UACNhB,EAAE,EAAEA,EAAE,CAACQ;QACT;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,KAAK,CACH,OAAO,GAAGD,QAAQ,CAACE,IAAI,CAACV,IAAI,GAAG,aAAa,GAAGQ,QAAQ,CAACE,IAAI,CAACT,QAC/D,CAAC;MACH,CAAC,CAAC,CACDU,KAAK,CAAC,CAAC;IACZ,CAAC;IAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;MACvBlB,KAAK,CACFmB,MAAM,CAAC,mCAAmC,EAAE;QAC3CF,MAAM,EAAE;UACNhB,EAAE,EAAEC,QAAQ,CAACO;QACf;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,KAAK,CACH,OAAO,GACLD,QAAQ,CAACE,IAAI,CAACV,IAAI,GAClB,aAAa,GACbQ,QAAQ,CAACE,IAAI,CAACT,QAAQ,GACtB,KACJ,CAAC;MACH,CAAC,CAAC,CACDU,KAAK,CAAC,CAAC;IACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}