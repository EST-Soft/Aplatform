{"ast":null,"code":"import { createVNode as _createVNode, toHandlers as _toHandlers, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"FullCalendar\"], {\n    options: $setup.calendarOptions\n  }), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", _toHandlers($setup.test, true), null, 16 /* FULL_PROPS */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","$setup","options","calendarOptions","_createElementVNode","_toHandlers","test"],"sources":["C:\\Users\\est\\Desktop\\p2\\frontend\\jobplatform\\src\\components\\fo\\user\\mypage\\MypageCalendar.vue"],"sourcesContent":["<template>\r\n    <FullCalendar :options=\"calendarOptions\" />\r\n    <div>\r\n        <button @=\"test\"></button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { defineProps } from 'vue'\r\n    import FullCalendar from '@fullcalendar/vue3'\r\n    import dayGridPlugin from '@fullcalendar/daygrid'\r\n    // import interactionPlugin from '@fullcalendar/interaction'\r\n\r\n    const props = defineProps({\r\n        events: {\r\n            type : Array\r\n        }\r\n    });\r\n\r\n    const calendarOptions = {\r\n        plugins: [dayGridPlugin],\r\n        initialView: 'dayGridMonth',\r\n        events: props.events\r\n    }\r\n\r\n    // Watch for changes in props.events and update calendarOptions\r\n    // watch(() => props.events, (newEvents) => {\r\n    //         calendarOptions.value = {\r\n    //         ...calendarOptions.value,\r\n    //         events: newEvents\r\n    //     };\r\n    // });\r\n\r\n    function test(){\r\n        console.log(props.events);\r\n    }\r\n\r\n</script>"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAA2CC,MAAA;IAA5BC,OAAO,EAAED,MAAA,CAAAE;EAAe,IACvCC,mBAAA,CAEM,cADFA,mBAAA,CAA0B,UAAlBC,WAAA,CAAQJ,MAAL,CAAAK,IAAI,oC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}