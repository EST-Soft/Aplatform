{"ast":null,"code":"import { watch, computed } from 'vue';\nimport FullCalendar from '@fullcalendar/vue3';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// import interactionPlugin from '@fullcalendar/interaction'\n\nexport default {\n  __name: 'MypageCalendar',\n  props: {\n    events: {\n      type: Array\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const calendarOptions = {\n      plugins: [dayGridPlugin],\n      initialView: 'dayGridMonth',\n      events: computed(() => props.events)\n    };\n\n    // Watch for changes in props.events and update calendarOptions\n    watch(() => props.events, newEvents => {\n      calendarOptions.value = {\n        ...calendarOptions.value,\n        events: newEvents\n      };\n    });\n    const __returned__ = {\n      props,\n      calendarOptions,\n      watch,\n      computed,\n      get FullCalendar() {\n        return FullCalendar;\n      },\n      get dayGridPlugin() {\n        return dayGridPlugin;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["watch","computed","FullCalendar","dayGridPlugin","props","__props","calendarOptions","plugins","initialView","events","newEvents","value"],"sources":["C:/Users/est/Desktop/p2/frontend/jobplatform/src/components/fo/user/mypage/MypageCalendar.vue"],"sourcesContent":["<template>\r\n    <FullCalendar :options=\"calendarOptions\" />\r\n</template>\r\n\r\n<script setup>\r\n    import { defineProps, watch, computed } from 'vue'\r\n    import FullCalendar from '@fullcalendar/vue3'\r\n    import dayGridPlugin from '@fullcalendar/daygrid'\r\n    // import interactionPlugin from '@fullcalendar/interaction'\r\n\r\n    const props = defineProps({\r\n        events: {\r\n            type : Array\r\n        }\r\n    });\r\n\r\n    const calendarOptions = {\r\n        plugins: [dayGridPlugin],\r\n        initialView: 'dayGridMonth',\r\n        events: computed(() => props.events)\r\n    }\r\n\r\n    // Watch for changes in props.events and update calendarOptions\r\n    watch(() => props.events, (newEvents) => {\r\n            calendarOptions.value = {\r\n            ...calendarOptions.value,\r\n            events: newEvents\r\n        };\r\n    });\r\n\r\n</script>"],"mappings":"AAKI,SAAsBA,KAAK,EAAEC,QAAQ,QAAQ,KAAK;AAClD,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,aAAa,MAAM,uBAAuB;AACjD;;;;;;;;;;;;;IAEA,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,eAAe,GAAG;MACpBC,OAAO,EAAE,CAACJ,aAAa,CAAC;MACxBK,WAAW,EAAE,cAAc;MAC3BC,MAAM,EAAER,QAAQ,CAAC,MAAMG,KAAK,CAACK,MAAM;IACvC,CAAC;;IAED;IACAT,KAAK,CAAC,MAAMI,KAAK,CAACK,MAAM,EAAGC,SAAS,IAAK;MACjCJ,eAAe,CAACK,KAAK,GAAG;QACxB,GAAGL,eAAe,CAACK,KAAK;QACxBF,MAAM,EAAEC;MACZ,CAAC;IACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}