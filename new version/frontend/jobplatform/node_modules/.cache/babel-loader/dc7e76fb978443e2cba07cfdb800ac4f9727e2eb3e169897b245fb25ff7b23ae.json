{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive, watch } from \"vue\";\nimport axios from \"axios\";\nimport { sendEmlRegister, getTermsContents } from \"@/api/member\";\nimport { useRouter } from \"vue-router\";\n\n// import EnterLogin from \"../../router/index.js\";\n\n// 미리 저장한 axios를 사용한 함수들 import\n//클라이언트가 작성한값을 실시간으로 바인딩 후 .value로 값에 접근해 사용할 수 있다.\n//ref 속성을 개별적으로 선언한 느낌 , value를 통해서 접근할 수 있다.\n\nexport default {\n  __name: 'EnterMemberRegister',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const cmnRgtrrtnNmbr = ref();\n    const numState = ref(false);\n    const entrprsId = ref(\"\");\n    const entrprsIdYn = ref(false);\n    const entrprsPswrd = ref(\"\");\n    const pswrdConfirm = ref(\"\");\n    const entrprsPicName = ref(\"\");\n    const entrprsName = ref(\"\");\n    const entrprsPicMp = ref(\"\");\n    const entrprsPicEml = ref(\"\");\n    const entrprsEmlRcvYn = ref(\"\");\n    const entrprsPrvcyTrmsYn = ref(\"\");\n    const gndrCtryCd = ref(\"\");\n    const emailKey = ref(\"\");\n    const emailCode = ref(\"\");\n    const errorEntrprsId = ref(\"\");\n    const errorEntrprsPswrd = ref(\"\");\n    const errorEntrprsPswrdConfirm = ref(\"\");\n    const errorEntrprsPicName = ref(\"\");\n    const errorEntrprsPicEml = ref(\"\");\n    const errorEntrprsPicMp = ref(\"\");\n    const errorEntrprsEmlRcvYn = ref(\"\");\n    const errorEntrprsPrvcyTrmsYn = ref(\"\");\n    const errorPswrdConfirm = ref(\"\");\n    const errorEmlChck = ref(\"\");\n    // const enterData = ref({});\n\n    const state = reactive({\n      terms: []\n    });\n    //computed와 watch는 데이터의 변경을 감지하지만.\n    //computed는 속성이 data 속성에 정의된 데이터를 감지하는 것이라면 watch 속성을 watch 속성 안에 정의된 데이터를 감지함\n    //computed속성이 데이터으 자동연산을 위한 것이라면 watch는 데이터가 변경되는 시점에 특정 동작을 수행할 때 사용함.\n\n    // 사업자 인증부분 글자가 10 글자일때만 api요청\n    watch(cmnRgtrrtnNmbr, newQuestion => {\n      if (newQuestion.length == 10) {\n        try {\n          const num1 = {\n            b_no: [cmnRgtrrtnNmbr.value]\n          };\n          const serviceKey = \"serviceKey=9MGLj%2FNxejdwtQrtB9B%2Ft0K6YUvomLCxT%2BUL5HobSTWGNnrRf5sQz7YkPLoBVO4RVmUAi8vxqTknM6Qvle4ZCg%3D%3D\";\n          const URL = \"http://api.odcloud.kr/api/nts-businessman/v1/status?\" + serviceKey + \"&returnType=JSON\";\n          const headers = {\n            accept: \"application/json\"\n          };\n          console.log(num1.b_no);\n          const data = num1; // json 을 string으로 변환하여 전송\n\n          axios.post(URL, data, {\n            // config \n            headers: headers\n          }).then(response => {\n            if (response.data.match_cnt == 1) {\n              numState.value = true;\n              console.log(response.data.match_cnt);\n              console.log(\"numState:\" + numState.value);\n            } else {\n              // 여기 비동기 통신으로 올바르지 않은 입력으로 표기.\n            }\n          }).catch(response => {\n            console.log(response.responseText);\n          });\n        } catch (error) {\n          // answer.value = \"Error! Could not reach the API. \" + error;\n        } finally {\n          // loading.value = false;\n        }\n      }\n    });\n\n    // id 중복체크 만들기 axios로 요청해서 중복체크하기.  \n    // * 중복체크 했을 때 성공한 true 값 보관할 변수\n    // 중복 체크 전에는  watch가 작동하지 않게 만들기\n    //  watch를 보관한 변수가 바뀌면 false \n\n    const idCheck = () => {\n      axios.get(\"http://localhost:80/enter/check\", {\n        params: {\n          entrprsId: entrprsId.value\n        }\n      }).then(() => {\n        entrprsIdYn.value = true;\n        console.log(\"entrprsIdYn.value:\" + entrprsIdYn.value);\n        errorEntrprsId.value = \"아이디 사용가능\";\n      }).catch(error => {\n        entrprsIdYn.value = true;\n        console.log(\"entrprsIdYn.value:\" + entrprsIdYn.value);\n        console.log(\"error: \" + error);\n        errorEntrprsId.value = \"중복된 아이디입니다\";\n      });\n      watch(entrprsId, (newQuestion, oldQuestion) => {\n        if (oldQuestion != newQuestion) {\n          errorEntrprsId.value = \"다시 중복확인 필요\";\n        }\n      });\n    };\n    const enterRegister = () => {\n      if (!/^[A-Za-z0-9]{4,20}$/.test(entrprsId.value)) {\n        errorEntrprsId.value = \"아이디 형식이 올바르지 않습니다. (영문, 숫자를 포함한 4자 이상 20자 이내)\";\n        return alert(errorEntrprsId.value);\n      }\n      if (!/^[A-Za-z0-9]{4,20}$/.test(entrprsPswrd.value)) {\n        errorEntrprsPswrd.value = \"비밀번호 형식이 올바르지 않습니다.\";\n        return alert(errorEntrprsPswrd.value);\n      }\n      if (pswrdConfirm.value !== entrprsPswrd.value) {\n        errorPswrdConfirm.value = \"비밀번호가 일치하지 않습니다.\";\n        return alert(errorPswrdConfirm.value);\n      }\n      if (!/^[A-Za-z가-힣]{1,6}$/.test(entrprsPicName.value)) {\n        entrprsPicName.value = \"이름 형식이 올바르지 않습니다.\";\n        return alert(entrprsPicName.value);\n      }\n      if (!/^01([0|1|6|7|8|9]?)?([0-9]{3,4})?([0-9]{4})$/.test(entrprsPicMp.value)) {\n        entrprsPicMp.value = \"휴대폰 번호 형식이 올바르지 않습니다. (10자리 또는 11자리 숫자)\";\n        return alert(entrprsPicMp.value);\n      }\n      if (!/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(entrprsPicEml.value)) {\n        errorEntrprsPicEml.value = \"이메일 형식이 올바르지 않습니다.\";\n        return alert(errorEntrprsPicEml.value);\n      }\n    };\n    if (emailCode.value && emailKey.value !== emailCode.value) {\n      errorEmlChck.value = \"인증코드가 일치하지 않습니다.\";\n    }\n    if (entrprsPrvcyTrmsYn.value !== \"Y\") {\n      errorEntrprsPrvcyTrmsYn.value = \"개인정보 처리방침에 동의해 주세요.\";\n    }\n    const enterData = {\n      cmnRgtrrtnNmbr: cmnRgtrrtnNmbr.value,\n      entrprsId: entrprsId.value,\n      entrprsPswrd: entrprsPswrd.value,\n      entrprsPicName: entrprsPicName.value,\n      entrprsName: entrprsName.value,\n      entrprsPicMp: entrprsPicMp.value,\n      entrprsPicEml: entrprsPicEml.value,\n      entrprsEmlRcvYn: entrprsEmlRcvYn.value,\n      entrprsPrvcyTrmsYn: entrprsPrvcyTrmsYn.value,\n      gndrCtryCd: gndrCtryCd.value\n    };\n    axios.post(\"http://localhost:80/enter/register\", enterData).then(response => {\n      console.log(response.data);\n      router.push(\"login\");\n    }).catch(error => {\n      // 컨트롤러에서 바디로 보내는건 없음. \n      console.log(error.data);\n    });\n    const fetchTerms = async () => {\n      try {\n        const {\n          data\n        } = await getTermsContents();\n        console.log(\"데이터받음\", data);\n        state.terms.length = 0; // 기존 배열 비우기\n        state.terms.push(...data); // 새로운 데이터 추가\n      } catch (error) {\n        console.error(\"데이터를 가져오는 중 오류가 발생했습니다.\", error);\n      }\n    };\n    const emlSend = async () => {\n      emailCode.value = \"\";\n      try {\n        const response = await sendEmlRegister(entrprsPicEml.value);\n        if (!/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(entrprsPicEml.value)) {\n          errorEntrprsPicEml.value = \"이메일 형식이 올바르지 않습니다.\";\n        } else if (response.data.exist) {\n          alert(response.data.exist);\n        } else if (response.status === 200) {\n          alert(\"인증코드가 발송되었습니다.\");\n          const key = response.data.key;\n          alert(key);\n          emailCode.value = key;\n        } else {\n          alert(\"잘못된 이메일입니다\");\n        }\n      } catch (error) {\n        console.error(\"이메일 전송 중 오류 발생:\", error);\n        alert(\"이메일 전송 중 오류가 발생했습니다.\");\n      }\n    };\n    const updateEmailCheck = event => {\n      emailKey.value = event.target.value;\n    };\n    const emlChck = () => {\n      if (emailCode.value === emailKey.value) {\n        alert(\"인증완료\");\n      } else {\n        alert(\"인증코드가 일치하지 않습니다.\");\n      }\n    };\n    // 비동기 처리\n\n    const __returned__ = {\n      router,\n      cmnRgtrrtnNmbr,\n      numState,\n      entrprsId,\n      entrprsIdYn,\n      entrprsPswrd,\n      pswrdConfirm,\n      entrprsPicName,\n      entrprsName,\n      entrprsPicMp,\n      entrprsPicEml,\n      entrprsEmlRcvYn,\n      entrprsPrvcyTrmsYn,\n      gndrCtryCd,\n      emailKey,\n      emailCode,\n      errorEntrprsId,\n      errorEntrprsPswrd,\n      errorEntrprsPswrdConfirm,\n      errorEntrprsPicName,\n      errorEntrprsPicEml,\n      errorEntrprsPicMp,\n      errorEntrprsEmlRcvYn,\n      errorEntrprsPrvcyTrmsYn,\n      errorPswrdConfirm,\n      errorEmlChck,\n      state,\n      idCheck,\n      enterRegister,\n      enterData,\n      fetchTerms,\n      emlSend,\n      updateEmailCheck,\n      emlChck,\n      ref,\n      reactive,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get sendEmlRegister() {\n        return sendEmlRegister;\n      },\n      get getTermsContents() {\n        return getTermsContents;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","watch","axios","sendEmlRegister","getTermsContents","useRouter","router","cmnRgtrrtnNmbr","numState","entrprsId","entrprsIdYn","entrprsPswrd","pswrdConfirm","entrprsPicName","entrprsName","entrprsPicMp","entrprsPicEml","entrprsEmlRcvYn","entrprsPrvcyTrmsYn","gndrCtryCd","emailKey","emailCode","errorEntrprsId","errorEntrprsPswrd","errorEntrprsPswrdConfirm","errorEntrprsPicName","errorEntrprsPicEml","errorEntrprsPicMp","errorEntrprsEmlRcvYn","errorEntrprsPrvcyTrmsYn","errorPswrdConfirm","errorEmlChck","state","terms","newQuestion","length","num1","b_no","value","serviceKey","URL","headers","accept","console","log","data","post","then","response","match_cnt","catch","responseText","error","idCheck","get","params","oldQuestion","enterRegister","test","alert","enterData","push","fetchTerms","emlSend","exist","status","key","updateEmailCheck","event","target","emlChck"],"sources":["C:/Users/est/Desktop/p2/frontend/jobplatform/src/views/fo/enterprise/EnterMemberRegister.vue"],"sourcesContent":["<template>\r\n    <div role=\"main\" class=\"main\">\r\n      <section class=\"page-header page-header-modern bg-color-grey page-header-lg\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 align-self-center p-static order-2 text-center\">\r\n              <h1 class=\"font-weight-bold text-dark\">회원가입</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <div class=\"container py-4\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-md-6 col-lg-5\">\r\n            <!-- <h2 class=\"font-weight-bold text-5 mb-0\">회원가입</h2> -->\r\n  \r\n            <!-- vue에서 양식은 제출할때 @click 대신 @submit.prevent=\"submitForm\" 방식은 선호함 \r\n            필수로 된 필드나 비동기로 방식으로 제춣할 때 이점을 가질 수 있음.\r\n            Ajax를 사용하는 경우 양식 제출을 방지해야 한다?.\r\n             -->\r\n            <!-- 제출 이벤트가 페이지를 다시 로드 하지 않습니다 -->\r\n            <!-- <form id=\"frmSignUp\"> -->\r\n  \r\n            <form id=\"frmSignUp\">\r\n              <!-- 사업자 번호 입력 -->\r\n              <div class=\"form-group col\">\r\n                <label class=\"form-label text-color-dark text-3\">사업자 번호 입력\r\n                  <span class=\"text-color-danger\">*</span></label>\r\n                <input type=\"text\" v-model=\"cmnRgtrrtnNmbr\" class=\"form-control form-control-lg text-4\" required\r\n                  placeholder=\"사업자 번호 10자리를 입력해주세요\" />\r\n              </div>\r\n              <!-- 사업자 번호 입력 끝 -->\r\n              <div v-if=\"numState == true\">\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <label class=\"form-label text-color-dark text-3\">아이디 <span class=\"text-color-danger\">*</span></label>\r\n                    <input type=\"text\" v-model=\"entrprsId\" class=\"form-control form-control-lg text-4\" required\r\n                      placeholder=\"영문, 숫자를 포함한 4자 이상 20자 이내\" />\r\n                    <div v-if=\"entrprsIdYn\">{{ errorEntrprsId}}</div>\r\n                  </div>\r\n                  <div class=\"form-group col-3\">\r\n                    <div class=\"form-label text-color-dark text-3\">&nbsp;</div>\r\n                    <button type=\"button\" @click=\"idCheck\" class=\"btn btn-quaternary mb-2\">\r\n                      중복확인\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <label class=\"form-label text-color-dark text-3\">비밀번호 <span class=\"text-color-danger\">*</span></label>\r\n                    <input type=\"password\" v-model=\"entrprsPswrd\" class=\"form-control form-control-lg text-4\" required\r\n                      placeholder=\"영문, 숫자를 포함한 4자 이상 20자 이내\" />\r\n                    <div v-if=\"errorEntrprsPswrd\" class=\"error\">\r\n                      {{ errorEntrprsPswrd }}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <label class=\"form-label text-color-dark text-3\">비밀번호 확인\r\n                      <span class=\"text-color-danger\">*</span></label>\r\n                    <input type=\"password\" v-model=\"pswrdConfirm\" class=\"form-control form-control-lg text-4\" required />\r\n                    <div v-if=\"errorEntrprsPswrdConfirm\" class=\"error\">\r\n                      {{ errorEntrprsPswrdConfirm }}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <label class=\"form-label text-color-dark text-3\">이름 <span class=\"text-color-danger\">*</span></label>\r\n                    <input type=\"text\" v-model=\"entrprsPicName\" class=\"form-control form-control-lg text-4\" required />\r\n                    <div v-if=\"errorEntrprsPicName\" class=\"error\">\r\n                      {{ errorEntrprsPicName }}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <label class=\"form-label text-color-dark text-3\">기업명 <span class=\"text-color-danger\">*</span></label>\r\n                    <input type=\"text\" v-model=\"entrprsName\" class=\"form-control form-control-lg text-4\" required\r\n                      placeholder=\"기업명\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <label class=\"form-label text-color-dark text-3\">휴대폰 <span class=\"text-color-danger\">*</span></label>\r\n                    <input type=\"text\" v-model=\"entrprsPicMp\" class=\"form-control form-control-lg text-4\" required\r\n                      placeholder=\"-(다시)는 제외하고 입력\" />\r\n                    <div v-if=\"errorEntrprsPicMp\" class=\"error\">\r\n                      {{ errorEntrprsPicMp }}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col-9\">\r\n                    <label class=\"form-label text-color-dark text-3\">이메일 <span class=\"text-color-danger\">*</span></label>\r\n                    <input type=\"email\" v-model=\"entrprsPicEml\" class=\"form-control form-control-lg text-4\" required />\r\n                    <div v-if=\"errorEntrprsPicEml\" class=\"error\">\r\n                      {{ errorEntrprsPicEml }}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group col-3\">\r\n                    <div class=\"form-label text-color-dark text-3\">&nbsp;</div>\r\n                    <button type=\"button\" v-on:click=\"emlSend\" class=\"btn btn-quaternary mb-2\">\r\n                      인증요청\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col-9\">\r\n                    <label class=\"form-label text-color-dark text-3\">인증 코드 <span\r\n                        class=\"text-color-danger\">*</span></label>\r\n                    <input type=\"text\" v-model=\"emailKey\" @input=\"updateEmailCheck\"\r\n                      class=\"form-control form-control-lg text-4\" required />\r\n                  </div>\r\n                  <div class=\"form-group col-3\">\r\n                    <div class=\"form-label text-color-dark text-3\">&nbsp;</div>\r\n                    <button type=\"button\" v-on:click=\"emlChck\" class=\"btn btn-quaternary mb-2\">\r\n                      확인\r\n                    </button>\r\n                  </div>\r\n                  <div v-if=\"errorEntrprsEmlRcvYn\" class=\"error\">\r\n                    {{ errorEntrprsEmlRcvYn }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <label class=\"form-label text-color-dark text-3\">이메일 수신 체크\r\n                      <span class=\"text-color-danger\">*</span></label>\r\n                    <div class=\"form-group col form-control form-control-lg text-4\">\r\n                      <input type=\"radio\" value=\"Y\" v-model=\"entrprsEmlRcvYn\" required class=\"form-check-input\" />\r\n                      예\r\n                      <input type=\"radio\" value=\"N\" v-model=\"entrprsEmlRcvYn\" required class=\"form-check-input\" />\r\n                      아니오\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <label class=\"form-label text-color-dark text-3\">성별 <span class=\"text-color-danger\">*</span></label>\r\n                    <div class=\"form-group col form-control form-control-lg text-4\">\r\n                      <input type=\"radio\" value=\"M\" v-model=\"gndrCtryCd\" required class=\"form-check-input\" />\r\n                      남\r\n                      <input type=\"radio\" value=\"F\" v-model=\"gndrCtryCd\" required class=\"form-check-input\" />\r\n                      여\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- 약관 동의 모달 팝업-->\r\n                <div class=\"d-flex mb-3 justify-content-center\">\r\n                  <div class=\"row justify-content-between\">\r\n                    <div class=\"col-auto\">\r\n                      <button type=\"button\" class=\"col btn btn-dark rounded-0 text-3\" data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#largeModal\" @click=\"fetchTerms\">\r\n                        회원정보 약관\r\n                      </button>\r\n                    </div>\r\n                    <div class=\"col-auto d-flex align-items-center text-4\">\r\n                      <input type=\"checkbox\" true-value=\"Y\" false-value=\"N\" v-model=\"entrprsPrvcyTrmsYn\" required\r\n                        class=\"form-check-input\" />동의\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div v-if=\"errorEntrprsPrvcyTrmsYn\" class=\"error\">\r\n                      {{ errorEntrprsPrvcyTrmsYn }}\r\n                    </div>\r\n                  </div>\r\n  \r\n                  <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" aria-labelledby=\"largeModalLabel\"\r\n                    style=\"display: none\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog modal-lg\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h4 class=\"modal-title\" id=\"largeModalLabel\">\r\n                            회원정보 약관\r\n                          </h4>\r\n                          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-hidden=\"true\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <div v-if=\"state.terms.length\">\r\n                            <div v-for=\"(term, index) in state.terms\" :key=\"index\">\r\n                              <p>{{ term.trmsCntnt }}</p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                          <button type=\"button\" class=\"btn btn-light\" data-bs-dismiss=\"modal\">\r\n                            확인\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- 약관 동의 모달 팝업-->\r\n                <!-- <div class=\"row\">\r\n                              <div class=\"form-group col\">\r\n                                  <p class=\"text-2 mb-2\">Your personal data will be used to support your experience throughout this website, to manage access to your account, and for other purposes described in our <a href=\"#\" class=\"text-decoration-none\">privacy policy.</a></p>\r\n                              </div>\r\n                          </div> -->\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <!-- 조건 생성 후 login 되는걸로  -->\r\n                    <button type=\"submit\" @click=\"enterRegister\"\r\n                      class=\"btn btn-dark btn-modern w-100 text-uppercase rounded-0 font-weight-bold text-3 py-3\"\r\n                      data-loading-text=\"Loading...\">\r\n                      회원가입 완료\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col\">\r\n                    <a href=\"#\"\r\n                      class=\"btn btn-dark btn-modern w-100 text-transform-none rounded-0 font-weight-bold align-items-center d-inline-flex justify-content-center text-3 py-3\"\r\n                      data-loading-text=\"Loading...\"><i class=\"fab fa-facebook text-5 me-2\"></i> 소셜\r\n                      회원가입</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive, watch } from \"vue\";\r\n  import axios from \"axios\";\r\n  import { sendEmlRegister, getTermsContents } from \"@/api/member\";\r\n  import { useRouter } from \"vue-router\";\r\n  \r\n  // import EnterLogin from \"../../router/index.js\";\r\n  \r\n  // 미리 저장한 axios를 사용한 함수들 import\r\n  //클라이언트가 작성한값을 실시간으로 바인딩 후 .value로 값에 접근해 사용할 수 있다.\r\n  //ref 속성을 개별적으로 선언한 느낌 , value를 통해서 접근할 수 있다.\r\n  const router = useRouter();\r\n  const cmnRgtrrtnNmbr = ref();\r\n  const numState = ref(false);\r\n  const entrprsId = ref(\"\");\r\n  const entrprsIdYn = ref(false);\r\n  const entrprsPswrd = ref(\"\");\r\n  const pswrdConfirm = ref(\"\");\r\n  const entrprsPicName = ref(\"\");\r\n  const entrprsName = ref(\"\");\r\n  const entrprsPicMp = ref(\"\");\r\n  const entrprsPicEml = ref(\"\");\r\n  const entrprsEmlRcvYn = ref(\"\");\r\n  const entrprsPrvcyTrmsYn = ref(\"\");\r\n  const gndrCtryCd = ref(\"\");\r\n  const emailKey = ref(\"\");\r\n  const emailCode = ref(\"\");\r\n  const errorEntrprsId = ref(\"\");\r\n  const errorEntrprsPswrd = ref(\"\");\r\n  const errorEntrprsPswrdConfirm = ref(\"\");\r\n  const errorEntrprsPicName = ref(\"\");\r\n  const errorEntrprsPicEml = ref(\"\");\r\n  const errorEntrprsPicMp = ref(\"\");\r\n  const errorEntrprsEmlRcvYn = ref(\"\");\r\n  const errorEntrprsPrvcyTrmsYn = ref(\"\");\r\n  const errorPswrdConfirm = ref(\"\");\r\n  const errorEmlChck = ref(\"\");\r\n  // const enterData = ref({});\r\n  \r\n  \r\n  const state = reactive({\r\n    terms: [],\r\n  });\r\n  //computed와 watch는 데이터의 변경을 감지하지만.\r\n  //computed는 속성이 data 속성에 정의된 데이터를 감지하는 것이라면 watch 속성을 watch 속성 안에 정의된 데이터를 감지함\r\n  //computed속성이 데이터으 자동연산을 위한 것이라면 watch는 데이터가 변경되는 시점에 특정 동작을 수행할 때 사용함.\r\n  \r\n  // 사업자 인증부분 글자가 10 글자일때만 api요청\r\n  watch(cmnRgtrrtnNmbr, (newQuestion) => {\r\n    if (newQuestion.length == 10) {\r\n      try {\r\n        const num1 = {\r\n          b_no: [cmnRgtrrtnNmbr.value],\r\n        };\r\n        const serviceKey =\r\n          \"serviceKey=9MGLj%2FNxejdwtQrtB9B%2Ft0K6YUvomLCxT%2BUL5HobSTWGNnrRf5sQz7YkPLoBVO4RVmUAi8vxqTknM6Qvle4ZCg%3D%3D\";\r\n        const URL =\r\n          \"http://api.odcloud.kr/api/nts-businessman/v1/status?\" +\r\n          serviceKey +\r\n          \"&returnType=JSON\";\r\n  \r\n        const headers = {\r\n          accept: \"application/json\",\r\n        };\r\n        console.log(num1.b_no);\r\n        const data = num1; // json 을 string으로 변환하여 전송\r\n  \r\n        axios\r\n          .post(URL, data, {\r\n            // config \r\n            headers: headers,\r\n          })\r\n          .then((response) => {\r\n            if (response.data.match_cnt == 1) {\r\n              numState.value = true;\r\n              console.log(response.data.match_cnt);\r\n              console.log(\"numState:\" + numState.value);\r\n            } else {\r\n              // 여기 비동기 통신으로 올바르지 않은 입력으로 표기.\r\n            }\r\n          })\r\n          .catch((response) => {\r\n            console.log(response.responseText);\r\n          });\r\n      } catch (error) {\r\n        // answer.value = \"Error! Could not reach the API. \" + error;\r\n      } finally {\r\n        // loading.value = false;\r\n      }\r\n    }\r\n  });\r\n  \r\n  // id 중복체크 만들기 axios로 요청해서 중복체크하기.  \r\n  // * 중복체크 했을 때 성공한 true 값 보관할 변수\r\n  // 중복 체크 전에는  watch가 작동하지 않게 만들기\r\n  //  watch를 보관한 변수가 바뀌면 false \r\n  \r\n    const idCheck = () => {\r\n      axios.get(\"http://localhost:80/enter/check\", {\r\n        params: {\r\n          entrprsId: entrprsId.value\r\n        }\r\n      }).then(() => {\r\n        entrprsIdYn.value = true;\r\n        console.log(\"entrprsIdYn.value:\" + entrprsIdYn.value);\r\n        errorEntrprsId.value = \"아이디 사용가능\";\r\n  \r\n  \r\n      }).catch((error) => {\r\n        entrprsIdYn.value = true;\r\n        console.log(\"entrprsIdYn.value:\" + entrprsIdYn.value);\r\n        console.log(\"error: \" + error);\r\n        errorEntrprsId.value = \"중복된 아이디입니다\";\r\n  \r\n      }\r\n      );\r\n      watch(entrprsId, (newQuestion, oldQuestion) => {\r\n          \r\n        if (oldQuestion != newQuestion) {\r\n          errorEntrprsId.value = \"다시 중복확인 필요\";\r\n        }\r\n        \r\n      });\r\n    };\r\n    \r\n  \r\n  \r\n  \r\n  const enterRegister = () => {\r\n    \r\n    if (!/^[A-Za-z0-9]{4,20}$/.test(entrprsId.value)) {\r\n      errorEntrprsId.value =\r\n        \"아이디 형식이 올바르지 않습니다. (영문, 숫자를 포함한 4자 이상 20자 이내)\";\r\n      return alert(errorEntrprsId.value);\r\n    } \r\n  \r\n    if (!/^[A-Za-z0-9]{4,20}$/.test(entrprsPswrd.value)) {\r\n      errorEntrprsPswrd.value =\r\n        \"비밀번호 형식이 올바르지 않습니다.\";\r\n            return alert(errorEntrprsPswrd.value);\r\n  \r\n    } \r\n  \r\n    if (pswrdConfirm.value !== entrprsPswrd.value) {\r\n      errorPswrdConfirm.value = \"비밀번호가 일치하지 않습니다.\";\r\n           return alert(errorPswrdConfirm.value);\r\n    }\r\n    if (!/^[A-Za-z가-힣]{1,6}$/.test(entrprsPicName.value)) {\r\n      entrprsPicName.value = \"이름 형식이 올바르지 않습니다.\";\r\n           return alert(entrprsPicName.value);\r\n    } \r\n  \r\n    if (!/^01([0|1|6|7|8|9]?)?([0-9]{3,4})?([0-9]{4})$/.test(entrprsPicMp.value)) {\r\n      entrprsPicMp.value =\r\n        \"휴대폰 번호 형식이 올바르지 않습니다. (10자리 또는 11자리 숫자)\";\r\n                return alert(entrprsPicMp.value);\r\n    }\r\n  \r\n    if (\r\n      !/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n        entrprsPicEml.value    \r\n      )\r\n    ) {\r\n      errorEntrprsPicEml.value = \"이메일 형식이 올바르지 않습니다.\";\r\n                    return alert(errorEntrprsPicEml.value);\r\n    }\r\n    }\r\n  \r\n  if (emailCode.value && emailKey.value !== emailCode.value){\r\n    errorEmlChck.value = \"인증코드가 일치하지 않습니다.\";\r\n  \r\n    } \r\n  \r\n    if (entrprsPrvcyTrmsYn.value !== \"Y\"){\r\n      errorEntrprsPrvcyTrmsYn.value = \"개인정보 처리방침에 동의해 주세요.\";\r\n  \r\n    } \r\n    const enterData = {\r\n      cmnRgtrrtnNmbr: cmnRgtrrtnNmbr.value,\r\n      entrprsId: entrprsId.value,\r\n      entrprsPswrd: entrprsPswrd.value,\r\n      entrprsPicName: entrprsPicName.value,\r\n      entrprsName: entrprsName.value,\r\n      entrprsPicMp: entrprsPicMp.value,\r\n      entrprsPicEml: entrprsPicEml.value,\r\n      entrprsEmlRcvYn: entrprsEmlRcvYn.value,\r\n      entrprsPrvcyTrmsYn: entrprsPrvcyTrmsYn.value,\r\n      gndrCtryCd: gndrCtryCd.value,\r\n    };\r\n     axios\r\n      .post(\"http://localhost:80/enter/register\", enterData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n            router.push(\"login\");\r\n  \r\n      })\r\n      .catch((error) => {\r\n        // 컨트롤러에서 바디로 보내는건 없음. \r\n        console.log(error.data);\r\n        \r\n      });\r\n  \r\n  \r\n  const fetchTerms = async () => {\r\n    try {\r\n      const { data } = await getTermsContents();\r\n      console.log(\"데이터받음\", data);\r\n      state.terms.length = 0; // 기존 배열 비우기\r\n      state.terms.push(...data); // 새로운 데이터 추가\r\n    } catch (error) {\r\n      console.error(\"데이터를 가져오는 중 오류가 발생했습니다.\", error);\r\n    }\r\n  };\r\n  \r\n  const emlSend = async () => {\r\n  \r\n    emailCode.value = \"\";\r\n  \r\n    try {\r\n      const response = await sendEmlRegister(entrprsPicEml.value);\r\n      if (\r\n        !/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          entrprsPicEml.value\r\n        )\r\n      ) {\r\n        errorEntrprsPicEml.value = \"이메일 형식이 올바르지 않습니다.\";\r\n      } else if (response.data.exist) {\r\n        alert(response.data.exist);\r\n      } else if (response.status === 200) {\r\n        alert(\"인증코드가 발송되었습니다.\");\r\n        const key = response.data.key;\r\n        alert(key);\r\n        emailCode.value = key;\r\n      } else {\r\n        alert(\"잘못된 이메일입니다\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"이메일 전송 중 오류 발생:\", error);\r\n      alert(\"이메일 전송 중 오류가 발생했습니다.\");\r\n    }\r\n  };\r\n  \r\n  const updateEmailCheck = (event) => {\r\n  \r\n    emailKey.value = event.target.value;\r\n  \r\n  };\r\n  \r\n  const emlChck = () => {\r\n    if (emailCode.value === emailKey.value) {\r\n      alert(\"인증완료\");\r\n    } else {\r\n      alert(\"인증코드가 일치하지 않습니다.\");\r\n    }\r\n  };\r\n  // 비동기 처리\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .error {\r\n    color: red;\r\n  }\r\n  .form-group input[type=\"radio\"]:nth-child(2) {\r\n    margin-left: 10px;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}