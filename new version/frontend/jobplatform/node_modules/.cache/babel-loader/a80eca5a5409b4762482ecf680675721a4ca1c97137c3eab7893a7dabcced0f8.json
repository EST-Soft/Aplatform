{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"회원가입\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"회원가입\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"조회\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"조회\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"삭제 테스트\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"조회\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"번호로 조회 후 수정 확인해보기\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.postTest, [\"prevent\"])\n  }, [_createCommentVNode(\" 데이터 바인딩 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.name = $event),\n    placeholder: \"이름\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    placeholder: \"비밀번호\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _hoisted_2], 32 /* NEED_HYDRATION */)]), _hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.getTest, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.id = $event),\n    placeholder: \"번호로 조회\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.id]]), _hoisted_4, _createElementVNode(\"p\", null, _toDisplayString($setup.responseId), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.responsePassword), 1 /* TEXT */)], 32 /* NEED_HYDRATION */), _hoisted_5, _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.deleteTest, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.deleteId = $event),\n    placeholder: \"번호로 삭제\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.deleteId]]), _hoisted_6], 32 /* NEED_HYDRATION */), _hoisted_7, _createCommentVNode(\"\\r\\n    <form @submit.prevent=\\\"postTest\\\">\\r\\n      \\r\\n      <input type=\\\"text\\\" v-model=\\\"name\\\" />\\r\\n      <input type=\\\"text\\\" v-model=\\\"password\\\" />\\r\\n      <button type=\\\"submit\\\">회원가입</button>\\r\\n    </form> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_Fragment","_hoisted_1","onSubmit","_withModifiers","$setup","postTest","_createCommentVNode","_cache","$event","name","placeholder","password","_hoisted_2","_hoisted_3","getTest","id","_hoisted_4","_toDisplayString","responseId","responsePassword","_hoisted_5","deleteTest","deleteId","_hoisted_6","_hoisted_7"],"sources":["C:\\Users\\est\\Desktop\\p2\\frontend\\jobplatform\\src\\views\\devSample\\SampleView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h4>회원가입</h4>\r\n      <form @submit.prevent=\"postTest\">\r\n        <!-- 데이터 바인딩 -->\r\n        <input type=\"text\" v-model=\"name\" placeholder=\"이름\" />\r\n        <input type=\"text\" v-model=\"password\" placeholder=\"비밀번호\" />\r\n        <button type=\"submit\">회원가입</button>\r\n      </form>\r\n    </div>\r\n\r\n    <h4>조회</h4>\r\n\r\n    <form @submit.prevent=\"getTest\">\r\n      <input type=\"text\" v-model=\"id\" placeholder=\"번호로 조회\" />\r\n      <button type=\"submit\">조회</button>\r\n      <p>{{ responseId }}</p>\r\n      <p>{{ responsePassword }}</p>\r\n    </form>\r\n\r\n    <h4>삭제 테스트</h4>\r\n    <form @submit.prevent=\"deleteTest\">\r\n      <input type=\"text\" v-model=\"deleteId\" placeholder=\"번호로 삭제\" />\r\n      <button type=\"submit\">조회</button>\r\n    </form>\r\n    <h4>번호로 조회 후 수정 확인해보기</h4>\r\n\r\n    <!--\r\n    <form @submit.prevent=\"postTest\">\r\n      \r\n      <input type=\"text\" v-model=\"name\" />\r\n      <input type=\"text\" v-model=\"password\" />\r\n      <button type=\"submit\">회원가입</button>\r\n    </form> -->\r\n  </template>\r\n\r\n  <!-- composition api-->\r\n  <script setup>\r\n  import { ref } from \"vue\";\r\n  import axios from \"axios\";\r\n\r\n  const id = ref();\r\n  const deleteId = ref();\r\n  const name = ref(\"\");\r\n  const password = ref(\"\");\r\n\r\n  const responseId = ref(\"\");\r\n  const responsePassword = ref(\"\");\r\n\r\n  // const getTest = axios.get(\"/sample/sample\").then(console.log(\"get\")).catch();\r\n\r\n  const postTest = () => {\r\n    axios\r\n      .post(\"http://localhost:80/sample/sample\", {\r\n        name: name.value,\r\n        password: password.value,\r\n      })\r\n      .then((response) => {\r\n        alert(response.data.id);\r\n      })\r\n      .catch();\r\n  };\r\n  const getTest = () => {\r\n    axios\r\n      .get(\"http://localhost:80/sample/sample\", {\r\n        params: {\r\n          id: id.value,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\r\n          \"Id : \" + response.data.name + \" password :\" + response.data.password\r\n        );\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const deleteTest = () => {\r\n    axios\r\n      .delete(\"http://localhost:80/sample/sample\", {\r\n        params: {\r\n          id: deleteId.value,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\r\n          \"Id : \" +\r\n            response.data.name +\r\n            \" password :\" +\r\n            response.data.password +\r\n            \"삭제됨\"\r\n        );\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  </script>\r\n  <style>\r\n  </style>"],"mappings":";gCAEMA,mBAAA,CAAa,YAAT,MAAI;gCAKNA,mBAAA,CAAmC;EAA3BC,IAAI,EAAC;AAAQ,GAAC,MAAI;gCAI9BD,mBAAA,CAAW,YAAP,IAAE;gCAIJA,mBAAA,CAAiC;EAAzBC,IAAI,EAAC;AAAQ,GAAC,IAAE;gCAK1BD,mBAAA,CAAe,YAAX,QAAM;gCAGRA,mBAAA,CAAiC;EAAzBC,IAAI,EAAC;AAAQ,GAAC,IAAE;gCAE1BD,mBAAA,CAA0B,YAAtB,mBAAiB;;uBAzBzBE,mBAAA,CAAAC,SAAA,SACIH,mBAAA,CAQM,cAPJI,UAAa,EACbJ,mBAAA,CAKO;IALAK,QAAM,EAHnBC,cAAA,CAG6BC,MAAA,CAAAC,QAAQ;MAC7BC,mBAAA,aAAgB,E,gBAChBT,mBAAA,CAAqD;IAA9CC,IAAI,EAAC,MAAM;IAL1B,uBAAAS,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKoCJ,MAAA,CAAAK,IAAI,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAlBN,MAAA,CAAAK,IAAI,E,mBAChCZ,mBAAA,CAA2D;IAApDC,IAAI,EAAC,MAAM;IAN1B,uBAAAS,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMoCJ,MAAA,CAAAO,QAAQ,GAAAH,MAAA;IAAEE,WAAW,EAAC;iDAAtBN,MAAA,CAAAO,QAAQ,E,GACpCC,UAAmC,C,8BAIvCC,UAAW,EAEXhB,mBAAA,CAKO;IALAK,QAAM,EAbjBC,cAAA,CAa2BC,MAAA,CAAAU,OAAO;sBAC5BjB,mBAAA,CAAuD;IAAhDC,IAAI,EAAC,MAAM;IAdxB,uBAAAS,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAckCJ,MAAA,CAAAW,EAAE,GAAAP,MAAA;IAAEE,WAAW,EAAC;iDAAhBN,MAAA,CAAAW,EAAE,E,GAC9BC,UAAiC,EACjCnB,mBAAA,CAAuB,WAAAoB,gBAAA,CAAjBb,MAAA,CAAAc,UAAU,kBAChBrB,mBAAA,CAA6B,WAAAoB,gBAAA,CAAvBb,MAAA,CAAAe,gBAAgB,iB,4BAGxBC,UAAe,EACfvB,mBAAA,CAGO;IAHAK,QAAM,EArBjBC,cAAA,CAqB2BC,MAAA,CAAAiB,UAAU;sBAC/BxB,mBAAA,CAA6D;IAAtDC,IAAI,EAAC,MAAM;IAtBxB,uBAAAS,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsBkCJ,MAAA,CAAAkB,QAAQ,GAAAd,MAAA;IAAEE,WAAW,EAAC;iDAAtBN,MAAA,CAAAkB,QAAQ,E,GACpCC,UAAiC,C,4BAEnCC,UAA0B,EAE1BlB,mBAAA,gOAMW,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}